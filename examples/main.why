const PI: f64 = 3.1415;

fn add(x: i64, y: i64): i64 {
    x + y
}

fn explicit_return_add(x: i64, y: i64): i64 {
    return x + y;
}

struct TestStruct {
    x: i64;
}

instance TestStruct {
    fn get_x(): i64 {
        this.x
    }
}

fn takes_function(func: (i64, i64) -> i64): i64 {
    func(42, 69)
}

fn main(): void {
    let a = add(42, 1337);

    let arr = [42, 1337];

    let arr2 = [1337; 5];

    let b = explicit_return_add(arr[0], arr2[3]);

    let my_struct = TestStruct {
        x: 42
    };

    let value_of_x = my_struct.get_x();

//     let _ = \(x, y) => x + y;

    takes_function(add);
    takes_function(explicit_return_add);

    return if (42 < 25) {
        69
    } else {
        1337
    };
}
